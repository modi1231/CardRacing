using CardRacing;
using System;
using Xunit;

namespace CardRacingTesting
{
    public class Utilities_Cards_Tests
    {
        [Theory]
        [InlineData(0, "Ace")]
        [InlineData(1, "2")]
        [InlineData(2, "3")]
        [InlineData(3, "4")]
        [InlineData(4, "5")]
        [InlineData(5, "6")]
        [InlineData(6, "7")]
        [InlineData(7, "8")]
        [InlineData(8, "9")]
        [InlineData(9, "10")]
        [InlineData(10, "Jack")]
        [InlineData(11, "Queen")]
        [InlineData(12, "King")]
        [InlineData(13, "Ace")]
        [InlineData(14, "2")]
        [InlineData(15, "3")]
        [InlineData(16, "4")]
        [InlineData(17, "5")]
        [InlineData(18, "6")]
        [InlineData(19, "7")]
        [InlineData(20, "8")]
        [InlineData(21, "9")]
        [InlineData(22, "10")]
        [InlineData(23, "Jack")]
        [InlineData(24, "Queen")]
        [InlineData(25, "King")]
        [InlineData(26, "Ace")]
        [InlineData(27, "2")]
        [InlineData(28, "3")]
        [InlineData(29, "4")]
        [InlineData(30, "5")]
        [InlineData(31, "6")]
        [InlineData(32, "7")]
        [InlineData(33, "8")]
        [InlineData(34, "9")]
        [InlineData(35, "10")]
        [InlineData(36, "Jack")]
        [InlineData(37, "Queen")]
        [InlineData(38, "King")]
        [InlineData(39, "Ace")]
        [InlineData(40, "2")]
        [InlineData(41, "3")]
        [InlineData(42, "4")]
        [InlineData(43, "5")]
        [InlineData(44, "6")]
        [InlineData(45, "7")]
        [InlineData(46, "8")]
        [InlineData(47, "9")]
        [InlineData(48, "10")]
        [InlineData(49, "Jack")]
        [InlineData(50, "Queen")]
        [InlineData(51, "King")]
        [InlineData(52, "Ace")]
        [InlineData(-1, "0")]
        [InlineData(-2, "-1")]
        public void CanGetCardValue(int value, string ret)
        {
            Assert.Equal(Utilities_Cards.GetCardValue(value), ret);
        }


        [Theory]
        [InlineData(1, "Clubs")]
        [InlineData(2, "Clubs")]
        [InlineData(3, "Clubs")]
        [InlineData(4, "Clubs")]
        [InlineData(5, "Clubs")]
        [InlineData(6, "Clubs")]
        [InlineData(7, "Clubs")]
        [InlineData(8, "Clubs")]
        [InlineData(9, "Clubs")]
        [InlineData(10, "Clubs")]
        [InlineData(11, "Clubs")]
        [InlineData(12, "Clubs")]
        [InlineData(13, "Diamonds")]
        [InlineData(14, "Diamonds")]
        [InlineData(15, "Diamonds")]
        [InlineData(16, "Diamonds")]
        [InlineData(17, "Diamonds")]
        [InlineData(18, "Diamonds")]
        [InlineData(19, "Diamonds")]
        [InlineData(20, "Diamonds")]
        [InlineData(21, "Diamonds")]
        [InlineData(22, "Diamonds")]
        [InlineData(23, "Diamonds")]
        [InlineData(24, "Diamonds")]
        [InlineData(25, "Diamonds")]
        [InlineData(26, "Hearts")]
        [InlineData(27, "Hearts")]
        [InlineData(28, "Hearts")]
        [InlineData(29, "Hearts")]
        [InlineData(30, "Hearts")]
        [InlineData(31, "Hearts")]
        [InlineData(32, "Hearts")]
        [InlineData(33, "Hearts")]
        [InlineData(34, "Hearts")]
        [InlineData(35, "Hearts")]
        [InlineData(36, "Hearts")]
        [InlineData(37, "Hearts")]
        [InlineData(38, "Hearts")]
        [InlineData(39, "Spades")]
        [InlineData(40, "Spades")]
        [InlineData(41, "Spades")]
        [InlineData(42, "Spades")]
        [InlineData(43, "Spades")]
        [InlineData(44, "Spades")]
        [InlineData(45, "Spades")]
        [InlineData(46, "Spades")]
        [InlineData(47, "Spades")]
        [InlineData(48, "Spades")]
        [InlineData(49, "Spades")]
        [InlineData(50, "Spades")]
        [InlineData(51, "Spades")]
        [InlineData(52, "NONE")]
        [InlineData(-1, "NONE")]
        [InlineData(-2, "NONE")]
        public void CanGetCardSuit(int value, string ret)
        {
            Assert.Equal(Utilities_Cards.GetCardSuit(value).ToString(), ret);
        }

        [Theory]
        [InlineData(0, "C")]
        [InlineData(1, "C")]
        [InlineData(2, "C")]
        [InlineData(3, "C")]
        [InlineData(4, "C")]
        [InlineData(5, "C")]
        [InlineData(6, "C")]
        [InlineData(7, "C")]
        [InlineData(8, "C")]
        [InlineData(9, "C")]
        [InlineData(10, "C")]
        [InlineData(11, "C")]
        [InlineData(12, "C")]
        [InlineData(13, "D")]
        [InlineData(14, "D")]
        [InlineData(15, "D")]
        [InlineData(16, "D")]
        [InlineData(17, "D")]
        [InlineData(18, "D")]
        [InlineData(19, "D")]
        [InlineData(20, "D")]
        [InlineData(21, "D")]
        [InlineData(22, "D")]
        [InlineData(23, "D")]
        [InlineData(24, "D")]
        [InlineData(25, "D")]
        [InlineData(26, "H")]
        [InlineData(27, "H")]
        [InlineData(28, "H")]
        [InlineData(29, "H")]
        [InlineData(30, "H")]
        [InlineData(31, "H")]
        [InlineData(32, "H")]
        [InlineData(33, "H")]
        [InlineData(34, "H")]
        [InlineData(35, "H")]
        [InlineData(36, "H")]
        [InlineData(37, "H")]
        [InlineData(38, "H")]
        [InlineData(39, "S")]
        [InlineData(40, "S")]
        [InlineData(41, "S")]
        [InlineData(42, "S")]
        [InlineData(43, "S")]
        [InlineData(44, "S")]
        [InlineData(45, "S")]
        [InlineData(46, "S")]
        [InlineData(47, "S")]
        [InlineData(48, "S")]
        [InlineData(49, "S")]
        [InlineData(50, "S")]
        [InlineData(51, "S")]
        [InlineData(52, "N")]
        [InlineData(-1, "N")]
        public void CanGetSuitChar(int value, string ret)
        {
            Assert.Equal(Utilities_Cards.GetSuitChar(value).ToString(), ret);
        }

        [Theory]
        [InlineData(0, "Clubs : Ace (id: 00)")]
        [InlineData(1, "Clubs : 2 (id: 01)")]
        [InlineData(2, "Clubs : 3 (id: 02)")]
        [InlineData(3, "Clubs : 4 (id: 03)")]
        [InlineData(4, "Clubs : 5 (id: 04)")]
        [InlineData(5, "Clubs : 6 (id: 05)")]
        [InlineData(6, "Clubs : 7 (id: 06)")]
        [InlineData(7, "Clubs : 8 (id: 07)")]
        [InlineData(8, "Clubs : 9 (id: 08)")]
        [InlineData(9, "Clubs : 10 (id: 09)")]
        [InlineData(10, "Clubs : Jack (id: 10)")]
        [InlineData(11, "Clubs : Queen (id: 11)")]
        [InlineData(12, "Clubs : King (id: 12)")]
        [InlineData(13, "Diamonds : Ace (id: 13)")]
        [InlineData(14, "Diamonds : 2 (id: 14)")]
        [InlineData(15, "Diamonds : 3 (id: 15)")]
        [InlineData(16, "Diamonds : 4 (id: 16)")]
        [InlineData(17, "Diamonds : 5 (id: 17)")]
        [InlineData(18, "Diamonds : 6 (id: 18)")]
        [InlineData(19, "Diamonds : 7 (id: 19)")]
        [InlineData(20, "Diamonds : 8 (id: 20)")]
        [InlineData(21, "Diamonds : 9 (id: 21)")]
        [InlineData(22, "Diamonds : 10 (id: 22)")]
        [InlineData(23, "Diamonds : Jack (id: 23)")]
        [InlineData(24, "Diamonds : Queen (id: 24)")]
        [InlineData(25, "Diamonds : King (id: 25)")]
        [InlineData(26, "Hearts : Ace (id: 26)")]
        [InlineData(27, "Hearts : 2 (id: 27)")]
        [InlineData(28, "Hearts : 3 (id: 28)")]
        [InlineData(29, "Hearts : 4 (id: 29)")]
        [InlineData(30, "Hearts : 5 (id: 30)")]
        [InlineData(31, "Hearts : 6 (id: 31)")]
        [InlineData(32, "Hearts : 7 (id: 32)")]
        [InlineData(33, "Hearts : 8 (id: 33)")]
        [InlineData(34, "Hearts : 9 (id: 34)")]
        [InlineData(35, "Hearts : 10 (id: 35)")]
        [InlineData(36, "Hearts : Jack (id: 36)")]
        [InlineData(37, "Hearts : Queen (id: 37)")]
        [InlineData(38, "Hearts : King (id: 38)")]
        [InlineData(39, "Spades : Ace (id: 39)")]
        [InlineData(40, "Spades : 2 (id: 40)")]
        [InlineData(41, "Spades : 3 (id: 41)")]
        [InlineData(42, "Spades : 4 (id: 42)")]
        [InlineData(43, "Spades : 5 (id: 43)")]
        [InlineData(44, "Spades : 6 (id: 44)")]
        [InlineData(45, "Spades : 7 (id: 45)")]
        [InlineData(46, "Spades : 8 (id: 46)")]
        [InlineData(47, "Spades : 9 (id: 47)")]
        [InlineData(48, "Spades : 10 (id: 48)")]
        [InlineData(49, "Spades : Jack (id: 49)")]
        [InlineData(50, "Spades : Queen (id: 50)")]
        [InlineData(51, "Spades : King (id: 51)")]
        [InlineData(52, "NONE : Ace (id: 52)")]
        [InlineData(-1, "NONE : 0 (id: -1)")]
        [InlineData(-2, "NONE : -1 (id: -2)")]
        [InlineData(-3, "NONE : -2 (id: -3)")]
        public void CanPrintCard(int value, string ret)
        {
            Assert.Equal(Utilities_Cards.PrintCard(value).ToString(), ret);
        }

        [Theory]
        [InlineData(0, "CA")]
        [InlineData(1, "C2")]
        [InlineData(2, "C3")]
        [InlineData(3, "C4")]
        [InlineData(4, "C5")]
        [InlineData(5, "C6")]
        [InlineData(6, "C7")]
        [InlineData(7, "C8")]
        [InlineData(8, "C9")]
        [InlineData(9, "C1")]
        [InlineData(10, "CJ")]
        [InlineData(11, "CQ")]
        [InlineData(12, "CK")]
        [InlineData(13, "DA")]
        [InlineData(14, "D2")]
        [InlineData(15, "D3")]
        [InlineData(16, "D4")]
        [InlineData(17, "D5")]
        [InlineData(18, "D6")]
        [InlineData(19, "D7")]
        [InlineData(20, "D8")]
        [InlineData(21, "D9")]
        [InlineData(22, "D1")]
        [InlineData(23, "DJ")]
        [InlineData(24, "DQ")]
        [InlineData(25, "DK")]
        [InlineData(26, "HA")]
        [InlineData(27, "H2")]
        [InlineData(28, "H3")]
        [InlineData(29, "H4")]
        [InlineData(30, "H5")]
        [InlineData(31, "H6")]
        [InlineData(32, "H7")]
        [InlineData(33, "H8")]
        [InlineData(34, "H9")]
        [InlineData(35, "H1")]
        [InlineData(36, "HJ")]
        [InlineData(37, "HQ")]
        [InlineData(38, "HK")]
        [InlineData(39, "SA")]
        [InlineData(40, "S2")]
        [InlineData(41, "S3")]
        [InlineData(42, "S4")]
        [InlineData(43, "S5")]
        [InlineData(44, "S6")]
        [InlineData(45, "S7")]
        [InlineData(46, "S8")]
        [InlineData(47, "S9")]
        [InlineData(48, "S1")]
        [InlineData(49, "SJ")]
        [InlineData(50, "SQ")]
        [InlineData(51, "SK")]
        [InlineData(52, "NA")]
        [InlineData(-1, "N0")]
        public void CanGetTwoCharCard(int value, string ret)
        {
            Assert.Equal(Utilities_Cards.GetTwoCharCard(value).ToString(), ret);
        }
    }
}
